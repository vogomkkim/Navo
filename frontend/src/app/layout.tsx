import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AuthProvider } from './context/AuthContext'; // Import AuthProvider
import { EventTrackerProvider } from './context/EventTrackerContext'; // Import EventTrackerProvider
import { ComponentDefinitionProvider } from './context/ComponentDefinitionContext'; // Import ComponentDefinitionProvider
import { LayoutProvider } from './context/LayoutContext'; // Import LayoutProvider
import { QueryClient, QueryClientProvider } from '@tanstack/react-query'; // Import React Query

const queryClient = new QueryClient(); // Create a client

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

import { useGlobalErrorLogger } from '@/hooks/useGlobalErrorLogger'; // Import the hook

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  useGlobalErrorLogger(); // Call the hook here

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <QueryClientProvider client={queryClient}>
          <LayoutProvider>
            <ComponentDefinitionProvider>
              <EventTrackerProvider>
                <AuthProvider>
                  {children}
                </AuthProvider>
              </EventTrackerProvider>
            </ComponentDefinitionProvider>
          </LayoutProvider>
        </QueryClientProvider>
      </body>
    </html>
  );
}
